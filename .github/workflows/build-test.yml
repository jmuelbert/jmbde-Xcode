name: "CI: Build Test"

on: [push, pull_request]

env:
    CACHE_NAME: SWIFT5_1
    PROJECT: jmbde.xcworkspace
    FRAMEWORK_NAME: jmbde
    SCHEME: jmbde
    SDK: macosx10.15
    DESTINATION: "arch=x86_64"
    SWIFT_VERSION: 5.1
    LC_CTYPE: en_US.UTF-8
    LANG: en_US.UTF-8
    UPDATE_DOCS: true
    EXPANDED_CODE_SIGN_IDENTITY: "-"
    EXPANDED_CODE_SIGN_IDENTITY_NAME: "-"
    XCODEGEN_VERSION: 2.5.0

jobs:
    run-test:
        runs-on: macOS-latest
        strategy:
            matrix:
                destination:
                    [
                        "macOS",
                        "iOS Simulator,name=iPhone 8",
                        "tvOS Simulator,name=Apple TV",
                        "watchOS Simulator,name=Apple Watch Series 5 - 40mm",
                    ]
                swift-version: [5.1, 5.0, 4.2, 4.0]

        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: recursive
                  fetch-depth: 0
            - uses: actions/cache@v1
              id: bundler-cache
              with:
                  path: vendor/bundle
                  key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-gems-
            - name: Bundle setup
              run: bundle config path vendor/bundle
            - name: Bundle install
              if: steps.bundler-cache.outputs.cache-hit != 'true'
              run: bundle install --jobs 4 --retry 3
            - name: Brew Upgrade
              run: |
                brew update-reset
                brew bundle --no-upgrade
    
            - name: Run tests
              env:
                  DESTINATION: platform=${{ matrix.destination }}
                  SWIFT_VERSION: ${{ matrix.swift-version }}
              run: |
                 xcodebuild  -workspace "$FRAMEWORK_NAME.xcworkspace" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug clean build test ONLY_ACTIVE_ARCH=YES SWIFT_VERSION=$SWIFT_VERSION -verbose | xcpretty -c

            - name: Danger Swift
            # Hack to by pass the key invalidation mechanism
            # See for more info: https://github.community/t5/GitHub-Actions/Make-secrets-available-to-builds-of-forks/td-p/30678
              run: |
                export DANGER_GITHUB_API_TOKEN=$(echo   W>-wNw:Sfs?sr;CdnÜO@X*öNDu8TIz>2 | rev)
                bundle exec danger --verbose

            - name: Upload Artifact
              uses: actions/upload-artifact@v2.2.0
              with:
                  name: "jmbde-${{ matrix.config.os }}-${{ github.sha }}"
                  path: build/bin/${{ matrix.config.binary }}
