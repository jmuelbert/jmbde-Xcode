name: "CI: Build Test"

on: [push, pull_request]

env:
    CACHE_NAME: SWIFT5_1
    FRAMEWORK_NAME: jmbde
    SCHEME: jmbde
    SDK: macosx10.15
    DESTINATION: "arch=x86_64"
    SWIFT_VERSION: 5.1
    LC_CTYPE: en_US.UTF-8
    LANG: en_US.UTF-8
    UPDATE_DOCS: true
    EXPANDED_CODE_SIGN_IDENTITY: "-"
    EXPANDED_CODE_SIGN_IDENTITY_NAME: "-"
    XCODEGEN_VERSION: 2.5.0

jobs:
    build:
        name: "${{ matrix.config.os }}"
        runs-on: ${{ matrix.config.os }}
        strategy:
            fail-fast: false
            matrix:
                config:
                    - {
                          os: macos-latest,
                          cc: "clang",
                          cxx: "clang++",
                          binary: "jmbde.app/Contents/MacOS/jmbde",
                      }

        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: recursive
                  fetch-depth: 0

            - name: Build
              shell: bash
              run: |
                  mkdir -p build
                  gem install bundler
                  bundle install
                  brew update
                  brew outdated xctool || brew upgrade xctool
                  brew outdated carthage || brew upgrade carthage
                  pod install
                  xcodebuild -version
                  xcodebuild -showsdks
                  xcodebuild -workspace "$FRAMEWORK_NAME.xcworkspace" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug clean build test ONLY_ACTIVE_ARCH=YES SWIFT_VERSION=$SWIFT_VERSION -verbose | xcpretty -c
                  danger
                  jazzy
                  rubocop
                  Pods/SwiftLint/swiftlint lint
                  slather
                  pod lib lint
                  scripts/validate-markdown.sh

            - name: Upload Artifact
              uses: actions/upload-artifact@v2.2.0
              with:
                  name: "jmbde-${{ matrix.config.os }}-${{ github.sha }}"
                  path: build/bin/${{ matrix.config.binary }}
